// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class CallWithProtocolFee extends ethereum.Event {
  get params(): CallWithProtocolFee__Params {
    return new CallWithProtocolFee__Params(this);
  }
}

export class CallWithProtocolFee__Params {
  _event: CallWithProtocolFee;

  constructor(event: CallWithProtocolFee) {
    this._event = event;
  }

  get target(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get currency(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get fee(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get enabler(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get spender(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get additionalInformation(): string {
    return this._event.parameters[5].value.toString();
  }
}

export class FeeUpdate extends ethereum.Event {
  get params(): FeeUpdate__Params {
    return new FeeUpdate__Params(this);
  }
}

export class FeeUpdate__Params {
  _event: FeeUpdate;

  constructor(event: FeeUpdate) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get bps(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class UpdateAdProposal extends ethereum.Event {
  get params(): UpdateAdProposal__Params {
    return new UpdateAdProposal__Params(this);
  }
}

export class UpdateAdProposal__Params {
  _event: UpdateAdProposal;

  constructor(event: UpdateAdProposal) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get proposalId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get adParameter(): string {
    return this._event.parameters[3].value.toString();
  }

  get data(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class UpdateAdValidation extends ethereum.Event {
  get params(): UpdateAdValidation__Params {
    return new UpdateAdValidation__Params(this);
  }
}

export class UpdateAdValidation__Params {
  _event: UpdateAdValidation;

  constructor(event: UpdateAdValidation) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get proposalId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get adParameter(): string {
    return this._event.parameters[3].value.toString();
  }

  get validated(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }

  get reason(): string {
    return this._event.parameters[5].value.toString();
  }
}

export class UpdateOffer extends ethereum.Event {
  get params(): UpdateOffer__Params {
    return new UpdateOffer__Params(this);
  }
}

export class UpdateOffer__Params {
  _event: UpdateOffer;

  constructor(event: UpdateOffer) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get disable(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }

  get rulesURI(): string {
    return this._event.parameters[3].value.toString();
  }

  get nftContract(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class UpdateOfferAdParameter extends ethereum.Event {
  get params(): UpdateOfferAdParameter__Params {
    return new UpdateOfferAdParameter__Params(this);
  }
}

export class UpdateOfferAdParameter__Params {
  _event: UpdateOfferAdParameter;

  constructor(event: UpdateOfferAdParameter) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get adParameter(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get enable(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class UpdateOfferAdmin extends ethereum.Event {
  get params(): UpdateOfferAdmin__Params {
    return new UpdateOfferAdmin__Params(this);
  }
}

export class UpdateOfferAdmin__Params {
  _event: UpdateOfferAdmin;

  constructor(event: UpdateOfferAdmin) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get admin(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get enable(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class UpdateOfferValidator extends ethereum.Event {
  get params(): UpdateOfferValidator__Params {
    return new UpdateOfferValidator__Params(this);
  }
}

export class UpdateOfferValidator__Params {
  _event: UpdateOfferValidator;

  constructor(event: UpdateOfferValidator) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get validator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get enable(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class DSponsorAdmin__getOfferProposalsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getLastSubmitted(): BigInt {
    return this.value0;
  }

  getLastValidated(): BigInt {
    return this.value1;
  }

  getLastRejected(): BigInt {
    return this.value2;
  }
}

export class DSponsorAdmin extends ethereum.SmartContract {
  static bind(address: Address): DSponsorAdmin {
    return new DSponsorAdmin("DSponsorAdmin", address);
  }

  bps(): BigInt {
    let result = super.call("bps", "bps():(uint96)", []);

    return result[0].toBigInt();
  }

  try_bps(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("bps", "bps():(uint96)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOfferContract(offerId: BigInt): Address {
    let result = super.call(
      "getOfferContract",
      "getOfferContract(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(offerId)],
    );

    return result[0].toAddress();
  }

  try_getOfferContract(offerId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getOfferContract",
      "getOfferContract(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(offerId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getOfferProposals(
    offerId: BigInt,
    tokenId: BigInt,
    adParameter: string,
  ): DSponsorAdmin__getOfferProposalsResult {
    let result = super.call(
      "getOfferProposals",
      "getOfferProposals(uint256,uint256,string):(uint256,uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(offerId),
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromString(adParameter),
      ],
    );

    return new DSponsorAdmin__getOfferProposalsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
    );
  }

  try_getOfferProposals(
    offerId: BigInt,
    tokenId: BigInt,
    adParameter: string,
  ): ethereum.CallResult<DSponsorAdmin__getOfferProposalsResult> {
    let result = super.tryCall(
      "getOfferProposals",
      "getOfferProposals(uint256,uint256,string):(uint256,uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(offerId),
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromString(adParameter),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new DSponsorAdmin__getOfferProposalsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
      ),
    );
  }

  isAllowedAdParameter(offerId: BigInt, adParameter: string): boolean {
    let result = super.call(
      "isAllowedAdParameter",
      "isAllowedAdParameter(uint256,string):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(offerId),
        ethereum.Value.fromString(adParameter),
      ],
    );

    return result[0].toBoolean();
  }

  try_isAllowedAdParameter(
    offerId: BigInt,
    adParameter: string,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isAllowedAdParameter",
      "isAllowedAdParameter(uint256,string):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(offerId),
        ethereum.Value.fromString(adParameter),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isOfferAdmin(offerId: BigInt, admin: Address): boolean {
    let result = super.call(
      "isOfferAdmin",
      "isOfferAdmin(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(offerId),
        ethereum.Value.fromAddress(admin),
      ],
    );

    return result[0].toBoolean();
  }

  try_isOfferAdmin(
    offerId: BigInt,
    admin: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isOfferAdmin",
      "isOfferAdmin(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(offerId),
        ethereum.Value.fromAddress(admin),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isOfferDisabled(offerId: BigInt): boolean {
    let result = super.call(
      "isOfferDisabled",
      "isOfferDisabled(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(offerId)],
    );

    return result[0].toBoolean();
  }

  try_isOfferDisabled(offerId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isOfferDisabled",
      "isOfferDisabled(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(offerId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isOfferValidator(offerId: BigInt, validator: Address): boolean {
    let result = super.call(
      "isOfferValidator",
      "isOfferValidator(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(offerId),
        ethereum.Value.fromAddress(validator),
      ],
    );

    return result[0].toBoolean();
  }

  try_isOfferValidator(
    offerId: BigInt,
    validator: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isOfferValidator",
      "isOfferValidator(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(offerId),
        ethereum.Value.fromAddress(validator),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isTrustedForwarder(forwarder: Address): boolean {
    let result = super.call(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)],
    );

    return result[0].toBoolean();
  }

  try_isTrustedForwarder(forwarder: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  nftFactory(): Address {
    let result = super.call("nftFactory", "nftFactory():(address)", []);

    return result[0].toAddress();
  }

  try_nftFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall("nftFactory", "nftFactory():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  recipient(): Address {
    let result = super.call("recipient", "recipient():(address)", []);

    return result[0].toAddress();
  }

  try_recipient(): ethereum.CallResult<Address> {
    let result = super.tryCall("recipient", "recipient():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  swapRouter(): Address {
    let result = super.call("swapRouter", "swapRouter():(address)", []);

    return result[0].toAddress();
  }

  try_swapRouter(): ethereum.CallResult<Address> {
    let result = super.tryCall("swapRouter", "swapRouter():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  trustedForwarder(): Address {
    let result = super.call(
      "trustedForwarder",
      "trustedForwarder():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_trustedForwarder(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "trustedForwarder",
      "trustedForwarder():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _nftFactory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get forwarder(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get initialOwner(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _swapRouter(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _recipient(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _bps(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CallWithProtocolFeeCall extends ethereum.Call {
  get inputs(): CallWithProtocolFeeCall__Inputs {
    return new CallWithProtocolFeeCall__Inputs(this);
  }

  get outputs(): CallWithProtocolFeeCall__Outputs {
    return new CallWithProtocolFeeCall__Outputs(this);
  }
}

export class CallWithProtocolFeeCall__Inputs {
  _call: CallWithProtocolFeeCall;

  constructor(call: CallWithProtocolFeeCall) {
    this._call = call;
  }

  get target(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get callData(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get currency(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get baseAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get referral(): CallWithProtocolFeeCallReferralStruct {
    return changetype<CallWithProtocolFeeCallReferralStruct>(
      this._call.inputValues[4].value.toTuple(),
    );
  }
}

export class CallWithProtocolFeeCall__Outputs {
  _call: CallWithProtocolFeeCall;

  constructor(call: CallWithProtocolFeeCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class CallWithProtocolFeeCallReferralStruct extends ethereum.Tuple {
  get enabler(): Address {
    return this[0].toAddress();
  }

  get spender(): Address {
    return this[1].toAddress();
  }

  get additionalInformation(): string {
    return this[2].toString();
  }
}

export class CreateDSponsorNFTAndOfferCall extends ethereum.Call {
  get inputs(): CreateDSponsorNFTAndOfferCall__Inputs {
    return new CreateDSponsorNFTAndOfferCall__Inputs(this);
  }

  get outputs(): CreateDSponsorNFTAndOfferCall__Outputs {
    return new CreateDSponsorNFTAndOfferCall__Outputs(this);
  }
}

export class CreateDSponsorNFTAndOfferCall__Inputs {
  _call: CreateDSponsorNFTAndOfferCall;

  constructor(call: CreateDSponsorNFTAndOfferCall) {
    this._call = call;
  }

  get nftParams(): CreateDSponsorNFTAndOfferCallNftParamsStruct {
    return changetype<CreateDSponsorNFTAndOfferCallNftParamsStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get offerParams(): CreateDSponsorNFTAndOfferCallOfferParamsStruct {
    return changetype<CreateDSponsorNFTAndOfferCallOfferParamsStruct>(
      this._call.inputValues[1].value.toTuple(),
    );
  }
}

export class CreateDSponsorNFTAndOfferCall__Outputs {
  _call: CreateDSponsorNFTAndOfferCall;

  constructor(call: CreateDSponsorNFTAndOfferCall) {
    this._call = call;
  }
}

export class CreateDSponsorNFTAndOfferCallNftParamsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get symbol(): string {
    return this[1].toString();
  }

  get baseURI(): string {
    return this[2].toString();
  }

  get contractURI(): string {
    return this[3].toString();
  }

  get maxSupply(): BigInt {
    return this[4].toBigInt();
  }

  get forwarder(): Address {
    return this[5].toAddress();
  }

  get initialOwner(): Address {
    return this[6].toAddress();
  }

  get royaltyBps(): BigInt {
    return this[7].toBigInt();
  }

  get currencies(): Array<Address> {
    return this[8].toAddressArray();
  }

  get prices(): Array<BigInt> {
    return this[9].toBigIntArray();
  }

  get allowedTokenIds(): Array<BigInt> {
    return this[10].toBigIntArray();
  }
}

export class CreateDSponsorNFTAndOfferCallOfferParamsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get rulesURI(): string {
    return this[1].toString();
  }

  get options(): CreateDSponsorNFTAndOfferCallOfferParamsOptionsStruct {
    return changetype<CreateDSponsorNFTAndOfferCallOfferParamsOptionsStruct>(
      this[2].toTuple(),
    );
  }
}

export class CreateDSponsorNFTAndOfferCallOfferParamsOptionsStruct extends ethereum.Tuple {
  get admins(): Array<Address> {
    return this[0].toAddressArray();
  }

  get validators(): Array<Address> {
    return this[1].toAddressArray();
  }

  get adParameters(): Array<string> {
    return this[2].toStringArray();
  }
}

export class CreateOfferCall extends ethereum.Call {
  get inputs(): CreateOfferCall__Inputs {
    return new CreateOfferCall__Inputs(this);
  }

  get outputs(): CreateOfferCall__Outputs {
    return new CreateOfferCall__Outputs(this);
  }
}

export class CreateOfferCall__Inputs {
  _call: CreateOfferCall;

  constructor(call: CreateOfferCall) {
    this._call = call;
  }

  get nftContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get offerParams(): CreateOfferCallOfferParamsStruct {
    return changetype<CreateOfferCallOfferParamsStruct>(
      this._call.inputValues[1].value.toTuple(),
    );
  }
}

export class CreateOfferCall__Outputs {
  _call: CreateOfferCall;

  constructor(call: CreateOfferCall) {
    this._call = call;
  }
}

export class CreateOfferCallOfferParamsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get rulesURI(): string {
    return this[1].toString();
  }

  get options(): CreateOfferCallOfferParamsOptionsStruct {
    return changetype<CreateOfferCallOfferParamsOptionsStruct>(
      this[2].toTuple(),
    );
  }
}

export class CreateOfferCallOfferParamsOptionsStruct extends ethereum.Tuple {
  get admins(): Array<Address> {
    return this[0].toAddressArray();
  }

  get validators(): Array<Address> {
    return this[1].toAddressArray();
  }

  get adParameters(): Array<string> {
    return this[2].toStringArray();
  }
}

export class MintAndSubmitCall extends ethereum.Call {
  get inputs(): MintAndSubmitCall__Inputs {
    return new MintAndSubmitCall__Inputs(this);
  }

  get outputs(): MintAndSubmitCall__Outputs {
    return new MintAndSubmitCall__Outputs(this);
  }
}

export class MintAndSubmitCall__Inputs {
  _call: MintAndSubmitCall;

  constructor(call: MintAndSubmitCall) {
    this._call = call;
  }

  get params(): MintAndSubmitCallParamsStruct {
    return changetype<MintAndSubmitCallParamsStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class MintAndSubmitCall__Outputs {
  _call: MintAndSubmitCall;

  constructor(call: MintAndSubmitCall) {
    this._call = call;
  }
}

export class MintAndSubmitCallParamsStruct extends ethereum.Tuple {
  get tokenId(): BigInt {
    return this[0].toBigInt();
  }

  get to(): Address {
    return this[1].toAddress();
  }

  get currency(): Address {
    return this[2].toAddress();
  }

  get tokenData(): string {
    return this[3].toString();
  }

  get offerId(): BigInt {
    return this[4].toBigInt();
  }

  get adParameters(): Array<string> {
    return this[5].toStringArray();
  }

  get adDatas(): Array<string> {
    return this[6].toStringArray();
  }

  get referralAdditionalInformation(): string {
    return this[7].toString();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetTrustedForwarderCall extends ethereum.Call {
  get inputs(): SetTrustedForwarderCall__Inputs {
    return new SetTrustedForwarderCall__Inputs(this);
  }

  get outputs(): SetTrustedForwarderCall__Outputs {
    return new SetTrustedForwarderCall__Outputs(this);
  }
}

export class SetTrustedForwarderCall__Inputs {
  _call: SetTrustedForwarderCall;

  constructor(call: SetTrustedForwarderCall) {
    this._call = call;
  }

  get forwarder(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTrustedForwarderCall__Outputs {
  _call: SetTrustedForwarderCall;

  constructor(call: SetTrustedForwarderCall) {
    this._call = call;
  }
}

export class SubmitAdProposalCall extends ethereum.Call {
  get inputs(): SubmitAdProposalCall__Inputs {
    return new SubmitAdProposalCall__Inputs(this);
  }

  get outputs(): SubmitAdProposalCall__Outputs {
    return new SubmitAdProposalCall__Outputs(this);
  }
}

export class SubmitAdProposalCall__Inputs {
  _call: SubmitAdProposalCall;

  constructor(call: SubmitAdProposalCall) {
    this._call = call;
  }

  get offerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get adParameter(): string {
    return this._call.inputValues[2].value.toString();
  }

  get data(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class SubmitAdProposalCall__Outputs {
  _call: SubmitAdProposalCall;

  constructor(call: SubmitAdProposalCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateOfferCall extends ethereum.Call {
  get inputs(): UpdateOfferCall__Inputs {
    return new UpdateOfferCall__Inputs(this);
  }

  get outputs(): UpdateOfferCall__Outputs {
    return new UpdateOfferCall__Outputs(this);
  }
}

export class UpdateOfferCall__Inputs {
  _call: UpdateOfferCall;

  constructor(call: UpdateOfferCall) {
    this._call = call;
  }

  get offerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get disable(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }

  get name(): string {
    return this._call.inputValues[2].value.toString();
  }

  get rulesURI(): string {
    return this._call.inputValues[3].value.toString();
  }

  get addOptions(): UpdateOfferCallAddOptionsStruct {
    return changetype<UpdateOfferCallAddOptionsStruct>(
      this._call.inputValues[4].value.toTuple(),
    );
  }

  get removeOptions(): UpdateOfferCallRemoveOptionsStruct {
    return changetype<UpdateOfferCallRemoveOptionsStruct>(
      this._call.inputValues[5].value.toTuple(),
    );
  }
}

export class UpdateOfferCall__Outputs {
  _call: UpdateOfferCall;

  constructor(call: UpdateOfferCall) {
    this._call = call;
  }
}

export class UpdateOfferCallAddOptionsStruct extends ethereum.Tuple {
  get admins(): Array<Address> {
    return this[0].toAddressArray();
  }

  get validators(): Array<Address> {
    return this[1].toAddressArray();
  }

  get adParameters(): Array<string> {
    return this[2].toStringArray();
  }
}

export class UpdateOfferCallRemoveOptionsStruct extends ethereum.Tuple {
  get admins(): Array<Address> {
    return this[0].toAddressArray();
  }

  get validators(): Array<Address> {
    return this[1].toAddressArray();
  }

  get adParameters(): Array<string> {
    return this[2].toStringArray();
  }
}

export class UpdateProtocolFeeCall extends ethereum.Call {
  get inputs(): UpdateProtocolFeeCall__Inputs {
    return new UpdateProtocolFeeCall__Inputs(this);
  }

  get outputs(): UpdateProtocolFeeCall__Outputs {
    return new UpdateProtocolFeeCall__Outputs(this);
  }
}

export class UpdateProtocolFeeCall__Inputs {
  _call: UpdateProtocolFeeCall;

  constructor(call: UpdateProtocolFeeCall) {
    this._call = call;
  }

  get _recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _bps(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateProtocolFeeCall__Outputs {
  _call: UpdateProtocolFeeCall;

  constructor(call: UpdateProtocolFeeCall) {
    this._call = call;
  }
}

export class ValidateAdProposalCall extends ethereum.Call {
  get inputs(): ValidateAdProposalCall__Inputs {
    return new ValidateAdProposalCall__Inputs(this);
  }

  get outputs(): ValidateAdProposalCall__Outputs {
    return new ValidateAdProposalCall__Outputs(this);
  }
}

export class ValidateAdProposalCall__Inputs {
  _call: ValidateAdProposalCall;

  constructor(call: ValidateAdProposalCall) {
    this._call = call;
  }

  get offerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get proposalId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get adParameter(): string {
    return this._call.inputValues[3].value.toString();
  }

  get validated(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }

  get reason(): string {
    return this._call.inputValues[5].value.toString();
  }
}

export class ValidateAdProposalCall__Outputs {
  _call: ValidateAdProposalCall;

  constructor(call: ValidateAdProposalCall) {
    this._call = call;
  }
}
